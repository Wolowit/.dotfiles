// Place your key bindings in this file to override the defaults

// QWERTY

// [
  
//     {
//       "key": "shift+ctrl+e",
//       "command": "actions.findWithSelection"
//     },
//     {
//       "key": "ctrl+e",
//       "command": "-actions.findWithSelection"
//     },
//     {
//       "key": "ctrl+e",
//       "command": "workbench.view.explorer"
//     },
//     {
//       "key": "shift+ctrl+e",
//       "command": "-workbench.view.explorer"
//     },
//     {
//       "key": "r",
//       "command": "renameFile",
//       "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
//     },
//     {
//       "key": "enter",
//       "command": "-renameFile",
//       "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
//     },
//     {
//       "key": "j",
//       "command": "list.focusDown",
//       "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
//     },
//     {
//       "key": "k",
//       "command": "list.focusUp",
//       "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
//     },
//     {
//       "key": "ctrl+j",
//       "command": "selectNextSuggestion",
//       "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
//     },
//     {
//       "key": "ctrl+k",
//       "command": "selectPrevSuggestion",
//       "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
//     },
//     {
//       "key": "ctrl+j",
//       "command": "workbench.action.quickOpenNavigateNext",
//       "when": "inQuickOpen"
//     },
//     {
//       "key": "tab",
//       "command": "selectNextSuggestion",
//       "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
//     },
//     {
//       "key": "tab",
//       "command": "workbench.action.quickOpenNavigateNext",
//       "when": "inQuickOpen"
//     },
//     {
//       "key": "shift+tab",
//       "command": "selectPrevSuggestion",
//       "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
//     },
//     {
//       "key": "shift+tab",
//       "command": "workbench.action.quickOpenNavigatePrevious",
//       "when": "inQuickOpen"
//     },
//     {
//       "key": "ctrl+k",
//       "command": "workbench.action.quickOpenNavigatePrevious",
//       "when": "inQuickOpen"
//     },
//     {
//       "key": "enter",
//       "command": "list.select",
//       "when": "explorerViewletVisible && filesExplorerFocus"
//     },
//     {
//       "key": "l",
//       "command": "list.select",
//       "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
//     },
//     {
//       "key": "o",
//       "command": "list.toggleExpand",
//       "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
//     },
//     {
//       "key": "h",
//       "command": "list.collapse",
//       "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
//     },
//     {
//       "key": "a",
//       "command": "explorer.newFile",
//       "when": "filesExplorerFocus && !inputFocus"
//     },
//     {
//       "key": "shift+a",
//       "command": "explorer.newFolder",
//       "when": "filesExplorerFocus && !inputFocus"
//     },
//     {
//       "key": "shift+;",
//       "command": "insertPrevSuggestion",
//       "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
//     },
//     {
//       "key": "ctrl+l",
//       "when": "sideBarFocus",
//       "command": "workbench.action.focusActiveEditorGroup"
//     },
//     {
//       "key": "ctrl+k",
//       "command": "workbench.action.focusActiveEditorGroup",
//       "when": "terminalFocus"
//     },
//     {
//       "key": "ctrl+shift+t",
//       "command": "workbench.action.terminal.focus",
//       "when": "!terminalFocus"
//     },
//     {
//       "key": "ctrl+j",
//       "command": "-editor.action.insertLineAfter",
//       "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
//     },
//     {
//       "key": "alt+j",
//       "command": "workbench.action.terminal.focus",
//       "when": "!terminalFocus"
//     },
//     {
//       "key": "ctrl+shift+t",
//       "command": "workbench.action.togglePanel"
//     },
//     {
//       "key": "ctrl+j",
//       "command": "-workbench.action.togglePanel"
//     },
//     {
//       "key": "shift+k",
//       "command": "editor.action.showHover",
//       "when": "editorTextFocus && neovim.mode != 'insert'"
//     },
//     {
//       "key": "ctrl+k ctrl+i",
//       "command": "-editor.action.showHover",
//       "when": "editorTextFocus"
//     },
//     {
//       "key": "shift+tab",
//       "command": "-acceptAlternativeSelectedSuggestion",
//       "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
//     },
//     {
//       "key": "ctrl+f",
//       "command": "-vscode-neovim.ctrl-f",
//       "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
//     },
//     {
//       "key": "space",
//       "command": "whichkey.show",
//       "when": "neovim.mode != 'insert' && !terminalFocus && !viewContainer.workbench.view.extensions.enabled && !inputFocus"
       
//     },

//     //----------------jumpy------------------------------

//     {
//       "key": "shift+enter",
//       "command": "extension.aceJump.multiChar",
//       "when": "editorTextFocus"
//     }
  
  

  //********************************************************************************************

  // WorkMan


[
  /// https://code.visualstudio.com/api/references/when-clause-contexts
    {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "enter",
      "command": "-renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "n", //j
      "command": "list.focusDown",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "e", //k
      "command": "list.focusUp",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "tab", // i add this , fix tab enter suggest
      "command": "tab",
      "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !suggestWidgetVisible && neovim.mode != 'normal'"
    },  
    {
      "key": "tab",
      "command": "selectNextSuggestion", // add && neovim.mode == 'insert'
      // "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible && neovim.mode = 'insert'"
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible && neovim.mode == 'insert' && !inQuickOpen"
    },
    {
      "key": "shift+tab",  
      "command": "selectPrevSuggestion", // add && neovim.mode == 'insert'
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible && neovim.mode == 'insert' && !inQuickOpen"
    },
    {
      "key": "tab",
      "command": "workbench.action.quickOpenNavigateNext",
      "when": "inQuickOpen"
    },
    {
      "key": "shift+tab", // not work ??
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "ctrl+n", //k
      "command": "workbench.action.quickOpenNavigateNext",
      "when": "inQuickOpen"
    },
    {
      "key": "ctrl+e",
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "enter",
      "command": "list.select",
      "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
      "key": "o", //l
      "command": "list.select",
      "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
      "key": "a",
      "command": "explorer.newFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      "key": "shift+a",
      "command": "explorer.newFolder",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      "key": "shift+;",
      "command": "insertPrevSuggestion",
      "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
      "key": "ctrl+l",
      "when": "sideBarFocus",
      "command": "workbench.action.focusActiveEditorGroup"
    },
    {
      "key": "ctrl+shift+t",
      "command": "workbench.action.terminal.focus",
      "when": "!terminalFocus"
    },
    {
      "key": "ctrl+n", //j , insert linr after 
      "command": "-editor.action.insertLineAfter",
      "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
      "key": "shift+tab",
      "command": "-acceptAlternativeSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
    },
    {
      "key": "ctrl+f", // ??
      "command": "-vscode-neovim.ctrl-f",
      "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
      "key": "shift+u",
      "command": "redo",
      "when": "neovim.mode != 'insert' && !inputFocus"
    }, 
    {
      "key": "u",
      "command": "undo",
      "when": "neovim.mode != 'insert' && !inputFocus"
    }, 

    //---------------- Whichkey -------------------
    {
      "key": "space", // Whichkey
      "command": "whichkey.show",
      "when": "neovim.mode != 'insert' && !inputFocus"
       
    },
    {
      "key": "shift+space", // Whichkey
      "command": "whichkey.show",
      //"when": "neovim.mode == 'insert' && inputFocus"
      //   "when": "terminalFocus && !inQuickOpen"
       
    },

    // ------------------Movement -----------------------------
    {
      "key": "ctrl+y", 
      "command": "workbench.action.navigateLeft",
      "when": "!inQuickOpen"
    },
    {
      "key": "ctrl+o", 
      "command": "workbench.action.navigateRight",
      "when": "!inQuickOpen"
    },
    {
      "key": "ctrl+n", // tmux prefix C-n
      "command": "workbench.action.navigateDown", 
      "when": "neovim.mode != 'insert' && !inQuickOpen && !terminalFocus" 
    },
    {
      "key": "ctrl+e", 
      "command": "workbench.action.navigateUp",
      "when": "neovim.mode != 'insert' && !inQuickOpen" //editor.action.triggerSuggest
    },

    {
      "key": "ctrl+o",  // When in explorer
      "command": "workbench.action.navigateRight",
      "when": "filesExplorerFocus && !inputFocus && !inQuickOpen"
    },
    {
      "key": "ctrl+e", 
      "command": "workbench.action.navigateUp",
      "when": "terminalFocus && !inQuickOpen"
    },

    //----------------jumpy------------------------------
    {
      "key": "shift+enter",
      "command": "extension.aceJump.multiChar",
      "when": "editorTextFocus"
    },

    //----------------bin------------------------------
    // {
    //   "key": "cmd+space",
    //   "command": "deleteLeft",
    //   //"when": "neovim.mode != 'insert' && !inputFocus"
       
    // },
    // {
    //   "key": "cmd+'",
    //   "command": "cursorRight",
    //   "when": "inputFocus"  
    // },
    // {
    //   "key": "alt+j", // windows?
    //   "command": "workbench.action.terminal.focus",
    //   "when": "!terminalFocus"
    // },
    // {
    //   "key": "ctrl+shift+t",
    //   "command": "workbench.action.togglePanel"
    // },
    // {
    //   "key": "ctrl+n", //j
    //   "command": "-workbench.action.togglePanel"
    // },
    // {
    //   "key": "shift+e", //k
    //   "command": "editor.action.showHover",
    //   "when": "editorTextFocus && neovim.mode != 'insert'"
    // },
    // { // ctrl+k == deleteAllRight
    //   "key": "ctrl+k ctrl+i",
    //   "command": "-editor.action.showHover",
    //   "when": "editorTextFocus"
    // },
    // {
    //   "key": "o",
    //   "command": "list.toggleExpand",
    //   "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    // },
    // {
    //   "key": "h",
    //   "command": "list.collapse",
    //   "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    // },
    // {
    //   "key": "ctrl+e", //i add this
    //   "command": "-editor.action.insertLineBefore",
    //   "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    // },
    // {
    //   "key": "ctrl+e", //k ? out of terminal move back to code
    //   "command": "workbench.action.focusActiveEditorGroup",
    //   "when": "terminalFocus"
    // },
    // {
    //   "key": "ctrl+n", //j
    //   "command": "selectNextSuggestion",
    //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    // },
    // {
    //   "key": "ctrl+e", //k
    //   "command": "selectPrevSuggestion",
    //   "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    // },
    // {
    //   "key": "ctrl+n",
    //   "command": "selectNextSuggestion",
    //   "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    // }, 
    
    // {
      //   "key": "tab", // i add this , fix tab enter suggest
      //   "command": "acceptSelectedSuggestion",
      //   "when": "suggestWidgetVisible && textInputFocus"
      // }, 

    //----------------extensions ------------------------------
    {
      "key": "alt+h",
      "command": "git.viewFileHistory",
      "when": "editorTextFocus && neovim.mode != 'insert'"
    }, 
    {
      "key": "alt+b",
      "command": "gitlens.toggleFileBlame",
      "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/ && neovim.mode != 'insert'"
    },
    {
      "key": "alt+c",
      "command": "gitlens.showQuickCommitFileDetails",
      "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate' && neovim.mode != 'insert'"
    },
    
    //------------------- remove from default add here---------------------------
    {
      "key": "tab",
      "command": "-acceptSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "tab",
      "command": "-tab",
      "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
      "key": "ctrl+n",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "shift+tab",
      "command": "-insertPrevSuggestion",
      "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
      "key": "ctrl+f",
      "command": "-cursorRight",
      "when": "textInputFocus"
    },
    {
      "key": "alt+h",
      "command": "-git.viewFileHistory"
    },
    {
      "key": "alt+b",
      "command": "-gitlens.toggleFileBlame",
      "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
      "key": "alt+c",
      "command": "-gitlens.showQuickCommitFileDetails",
      "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },

//----------------test -------------------

]